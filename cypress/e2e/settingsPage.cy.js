/// <reference types="cypress" />
describe('Settings page', () => {
    const { authenticate } = require("../support/auth");
    beforeEach(() => {
        authenticate()
    })
    it('Should contain Deployment tab', () => {
        cy.get('div[class="me-auto navbar-nav"] a[href="#/settings"]').click()
        cy.wait(5000)
        cy.get('h4[class="text-center"]').should('exist').should('contain.text', 'Settings')
        cy.get('button[data-rr-ui-event-key="deployment"]').should('contain.text', 'Deployment').click()
        cy.wait(100)
        cy.get('button[class="btn btn-outline-success"]').should('contain.text', 'DEPLOY')
    })
    it('List current and available languages', () => {
        cy.get('div[class="me-auto navbar-nav"] a[href="#/settings"]').click()
        cy.wait(5000)
        cy.get('h4[class="text-center"]').should('exist').should('contain.text', 'Settings')
        cy.get('button[data-rr-ui-event-key="languages"]').should('contain.text', 'Languages').click()
        cy.wait(100)
        cy.get('div[aria-labelledby="Languages"][class="dropdown-container"] div[class="dropdown-heading"] div[class="dropdown-heading-value"]').should('exist').click({ force: true })
        cy.wait(100)
        cy.get('input[placeholder="Search"]').should('exist')
        cy.get('div[aria-label="Default language"]').should('exist')
        cy.get('button[class="btn btn-outline-success"]').should('contain.text', 'Apply changes')
    })
    it('Should be possible to change to dark mode', () => {
        cy.get('div[class="me-auto navbar-nav"] a[href="#/settings"]').click()
        cy.wait(5000)
        cy.get('h4[class="text-center"]').should('exist').should('contain.text', 'Settings')
        cy.get('button[data-rr-ui-event-key="interface"]').should('contain.text', 'Interface').click()
        cy.wait(100)
        cy.get('div[class="input-group"] button[class="form-control btn btn-outline-success"]').should('exist')
    })
    it('Should be possible to list current users and add new', () => {
        cy.get('div[class="me-auto navbar-nav"] a[href="#/settings"]').click()
        cy.wait(5000)
        cy.get('h4[class="text-center"]').should('exist').should('contain.text', 'Settings')
        cy.get('button[data-rr-ui-event-key="users"]').should('contain.text', 'Users').click()
        cy.wait(100)
        cy.get('div[aria-labelledby="settings-options-tab-users"]').should('exist')
        cy.get('button[id="add-user"]').should('exist').click()
        cy.wait(100)
        cy.get('div[id="add-user-modal"]').should('exist')
        cy.get('select[class="form-control"] option[value="viewer"]').should('exist')
        cy.get('button[class="btn btn-success"]').should('contain.text', "Invite")
        cy.get('input[placeholder*="example@email.com"]').type('non-existant@harckade.com')
        cy.get('button[class="btn btn-success"]').should('contain.text', "Invite").click()
        cy.wait(8000)
        cy.contains('td', 'non-existant@harckade.com').parent().find('td[class="text-center align-middle"] input').should('not.be.disabled').click()
        cy.wait(100)
        cy.get('button[id="edit-user"]').should('exist').should('not.be.disabled').click()
        cy.wait(100)
        cy.get('div[class="modal-title h4"]').should('contain.text', "Edit user role")
        cy.get('button[class="btn btn-secondary"]').should('contain.text', "Close").click()
        cy.wait(100)
        cy.get('button[id="delete-user"]').should('exist').should('not.be.disabled').click()
        cy.wait(100)
        cy.get('div[class="modal-title h4"]').should('contain.text', "Delete user")
        cy.get('button[class="btn btn-danger"]').should('contain.text', "Delete").click()
        cy.wait(8000)
        cy.contains('td', 'non-existant@harckade.com').should('not.exist')
    })
})
